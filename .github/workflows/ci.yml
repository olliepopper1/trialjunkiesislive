name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://github.com/${{ github.repository }}/deployments/production
    
    permissions:
      contents: read
      security-events: write
      deployments: write
      
    strategy:
      matrix:
        node-version: [18.x, 20.x]
      fail-fast: true

    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Cache dependencies
        uses: actions/cache@v3
        id: npm-cache
        with:
          path: |
            **/node_modules
            ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      
      - name: Install dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci
      
      - name: Build
        run: npm run build
        
      - name: Run tests with coverage
        run: npm run test:coverage
        
      - name: Upload coverage reports
        uses: codecov/codecov-action@v5
        if: matrix.node-version == '20.x'
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info
          fail_ci_if_error: true
          verbose: true
          
      - name: Create deployment status
        if: success() && github.ref == 'refs/heads/main'
        run: |
          gh api \
            --method POST \
            /repos/${{ github.repository }}/deployments \
            -f ref="${{ github.ref }}" \
            -f environment=production \
            -f description="Deployment from CI" \
            -f auto_merge=false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}